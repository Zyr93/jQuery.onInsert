/**
 * Project: jQuery "OnInsert" Plugin
 * Author: Derija
 * Date: 18.06.12
 * Time: 15:20
 *
 * Micro-library that adds the new event "onInsert" triggered for every element inserted into the document.
 * May be extended to detect completely new elements, but the way jQuery uses Elements makes it really
 * difficult to find a perfect solution...
 */
(function($){if(typeof Node!='function'){console.log('[jQuery.onInsert] I don\'t know what kind of browser you\'re using, but it does not support the Node object?!');return}$(function(){if($(document).data('insert._noDetectNew'))return;$('*').each(function(a,b){$(b).data('insert._inDocument',true)})});Node.prototype.appendChild_old=Node.prototype.appendChild;Node.prototype.appendChild=function(a){var b,after;b=$(document).find(a).length>0;Node.prototype.appendChild_old.apply(this,arguments);after=$(document).find(a).length>0;triggerEvents(a,b,after)};Node.prototype.insertBefore_old=Node.prototype.insertBefore;Node.prototype.insertBefore=function(a){var b,after;b=$(document).find(a).length>0;Node.prototype.insertBefore_old.apply(this,arguments);after=$(document).find(a).length>0;triggerEvents(a,b,after)};function triggerEvents(a,b,c){console.log($(a),b,c);if(!b&&c){var d={};if(!$(document).data('insert._noDetectNew'))d.isNew=!$(a).data('insert._inDocument');var e=jQuery.Event('insert',d);$(a).data('insert._inDocument',true).trigger(e)}}})(window.jQuery);
